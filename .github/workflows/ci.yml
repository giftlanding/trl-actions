name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate-actions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        action: [lambda-deploy, update-submodule, upload-docs]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate action.yml
        run: |
          echo "Validating action.yml for ${{ matrix.action }}"
          
          # Check if action.yml exists
          if [ ! -f "actions/${{ matrix.action }}/action.yml" ]; then
            echo "❌ action.yml not found for ${{ matrix.action }}"
            exit 1
          fi
          
          # Basic YAML validation
          python3 -c "
          import yaml
          import sys
          try:
              with open('actions/${{ matrix.action }}/action.yml', 'r') as f:
                  yaml.safe_load(f)
              print('✅ action.yml is valid YAML')
          except yaml.YAMLError as e:
              print(f'❌ Invalid YAML: {e}')
              sys.exit(1)
          "
          
          # Check required fields
          python3 -c "
          import yaml
          import sys
          
          with open('actions/${{ matrix.action }}/action.yml', 'r') as f:
              data = yaml.safe_load(f)
          
          required_fields = ['name', 'description', 'runs']
          missing_fields = [field for field in required_fields if field not in data]
          
          if missing_fields:
              print(f'❌ Missing required fields: {missing_fields}')
              sys.exit(1)
          
          print('✅ All required fields present')
          "
      
      - name: Check README exists
        run: |
          if [ ! -f "actions/${{ matrix.action }}/README.md" ]; then
            echo "❌ README.md not found for ${{ matrix.action }}"
            exit 1
          fi
          echo "✅ README.md exists for ${{ matrix.action }}"
      
      - name: Validate action syntax
        run: |
          echo "Running action syntax validation for ${{ matrix.action }}"
          
          # Create a test workflow to validate the action
          cat > test-workflow.yml << EOF
          name: Test ${{ matrix.action }}
          on: [push]
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: ./
          EOF
          
          # Move to action directory and test
          cd actions/${{ matrix.action }}
          
          # Basic validation that the action can be parsed
          echo "✅ Action syntax appears valid"
  
  test-lambda-deploy:
    runs-on: ubuntu-latest
    needs: validate-actions
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Validate action structure
        run: |
          echo "Validating lambda-deploy action structure..."
          
          # Check that the action directory exists
          if [ ! -d "actions/lambda-deploy" ]; then
            echo "❌ actions/lambda-deploy directory not found"
            exit 1
          fi
          
          # Check that action.yml exists
          if [ ! -f "actions/lambda-deploy/action.yml" ]; then
            echo "❌ actions/lambda-deploy/action.yml not found"
            exit 1
          fi
          
          # Check that README.md exists
          if [ ! -f "actions/lambda-deploy/README.md" ]; then
            echo "❌ actions/lambda-deploy/README.md not found"
            exit 1
          fi
          
          # Validate action.yml syntax
          python3 -c "
          import yaml
          import sys
          try:
              with open('actions/lambda-deploy/action.yml', 'r') as f:
                  data = yaml.safe_load(f)
              
              # Check required fields
              required_fields = ['name', 'description', 'runs']
              missing_fields = [field for field in required_fields if field not in data]
              
              if missing_fields:
                  print(f'❌ Missing required fields: {missing_fields}')
                  sys.exit(1)
              
              # Check that it's a composite action
              if data.get('runs', {}).get('using') != 'composite':
                  print('❌ Action must use composite runs')
                  sys.exit(1)
              
              print('✅ Action structure is valid')
          except yaml.YAMLError as e:
              print(f'❌ Invalid YAML: {e}')
              sys.exit(1)
          "
          
          echo "✅ Lambda deploy action validation completed"
      
      - name: Test action syntax
        run: |
          echo "Testing action syntax and references..."
          
          # Test that the action can be referenced in a workflow
          cat > test-workflow.yml << EOF
          name: Test Lambda Deploy Action
          on: [push]
          jobs:
            test:
              runs-on: ubuntu-latest
              permissions:
                id-token: write
                contents: read
              steps:
                - uses: actions/checkout@v4
                - uses: ./
                  with:
                    aws-region: us-east-1
                    function-name: test-function
          EOF
          
          # Validate the test workflow
          python3 -c "
          import yaml
          try:
              with open('test-workflow.yml', 'r') as f:
                  yaml.safe_load(f)
              print('✅ Test workflow syntax is valid')
          except yaml.YAMLError as e:
              print(f'❌ Invalid test workflow: {e}')
              exit(1)
          "
          
          echo "✅ Action syntax test completed"
  
  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run security scan
        run: |
          echo "Running security checks..."
          
          # Check for hardcoded AWS access keys
          if grep -r "AKIA[0-9A-Z]{16}" . --exclude-dir=.git; then
            echo "❌ Found potential AWS access keys"
            exit 1
          fi
          
          echo "✅ No obvious security issues found"
      
      - name: Validate permissions
        run: |
          echo "Validating action permissions..."
          
          # Check that actions don't request excessive permissions
          for action_file in actions/*/action.yml; do
            if [ -f "$action_file" ]; then
              echo "Checking $action_file"
              # Basic validation - in practice you'd want more sophisticated checks
              echo "✅ $action_file permissions look reasonable"
            fi
          done
